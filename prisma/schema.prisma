// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   Student?
  teacher   Teacher?
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model Student {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  studentId   String   @unique // Student ID field
  name        String
  department  Department @relation(fields: [departmentId], references: [id])
  departmentId String
  batch       String
  email       String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Teacher {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  name        String
  department  Department @relation(fields: [departmentId], references: [id])
  departmentId String
  email       String   @unique
  designation String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Department {
  id        String   @id @default(uuid())
  name      String   @unique
  students  Student[]
  teachers  Teacher[]
  courses   Course[]
}

model Course {
  id           String   @id @default(uuid())
  code         String   @unique
  name         String
  credit       Float
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String
}
